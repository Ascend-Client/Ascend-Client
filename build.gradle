import java.nio.file.Files
import java.nio.file.StandardCopyOption

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("io.github.goooler.shadow:shadow-gradle-plugin:8.1.8")
    }
}

plugins {
    id 'java'
    id("com.gorylenko.gradle-git-properties") version "2.4.1"
}

group 'io.github.betterclient'
version '1.0'

repositories {
    mavenCentral()

    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
}

File downloadQuixotic() {
    File f = file("quixotic.jar")
    if(f.exists()) return f

    f.createNewFile()
    def is = new URI("https://github.com/betterclient/Quixotic-Loader/releases/download/ithinkiforgoralreadyexists/Quixotic-1.0.jar").toURL().openStream()
    Files.copy(
            is,
            f.toPath(),
            StandardCopyOption.REPLACE_EXISTING)

    return f
}

def asmVersion = "9.7"

dependencies {
    implementation files(downloadQuixotic())

    implementation "org.json:json:20231013"
    implementation "net.fabricmc:sponge-mixin:0.15.0+mixin.0.8.7"
    implementation "io.github.llamalad7:mixinextras-fabric:0.4.0"
    implementation "net.fabricmc:tiny-remapper:0.10.1"

    implementation "org.ow2.asm:asm:$asmVersion"
    implementation "org.ow2.asm:asm-analysis:$asmVersion"
    implementation "org.ow2.asm:asm-commons:$asmVersion"
    implementation "org.ow2.asm:asm-tree:$asmVersion"
    implementation "org.ow2.asm:asm-util:$asmVersion"

    annotationProcessor "org.ow2.asm:asm:$asmVersion"
    annotationProcessor "org.ow2.asm:asm-analysis:$asmVersion"
    annotationProcessor "org.ow2.asm:asm-commons:$asmVersion"
    annotationProcessor "org.ow2.asm:asm-tree:$asmVersion"
    annotationProcessor "org.ow2.asm:asm-util:$asmVersion"
}

tasks.processResources {
    dependsOn(generateGitProperties)
}

gitProperties {
    gitPropertiesName = "github.txt"
    gitPropertiesResourceDir = file("src/main/resources/ballsack/github")
    keys = ["git.branch", "git.commit.id.abbrev"]
}

allprojects {
    targetCompatibility = sourceCompatibility = 21
}

subprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: "io.github.goooler.shadow"

    configurations {
        shade
        implementation.extendsFrom(shade)
    }

    dependencies {
        if(project.name == "Version-Auto-Updater") return

        shade parent
        shade files(downloadQuixotic())

        shade "org.json:json:20231013"
        shade "net.fabricmc:sponge-mixin:0.15.0+mixin.0.8.7"
        shade "io.github.llamalad7:mixinextras-fabric:0.4.0"
        shade "net.fabricmc:tiny-remapper:0.10.1"

        shade "org.ow2.asm:asm:$asmVersion"
        shade "org.ow2.asm:asm-analysis:$asmVersion"
        shade "org.ow2.asm:asm-commons:$asmVersion"
        shade "org.ow2.asm:asm-tree:$asmVersion"
        shade "org.ow2.asm:asm-util:$asmVersion"

        annotationProcessor "org.ow2.asm:asm:$asmVersion"
        annotationProcessor "org.ow2.asm:asm-analysis:$asmVersion"
        annotationProcessor "org.ow2.asm:asm-commons:$asmVersion"
        annotationProcessor "org.ow2.asm:asm-tree:$asmVersion"
        annotationProcessor "org.ow2.asm:asm-util:$asmVersion"
    }

    shadowJar {
        dependencies {}
        configurations = [project.configurations.shade]
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        archiveClassifier = project.objects.property(String.class).convention("")
    }
}